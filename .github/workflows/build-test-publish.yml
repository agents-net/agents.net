name: Build, Test and Publish

on:
  # Trigger the workflow on push,
  # but only for the master branch
  push:
    branches:
      - master

jobs:
  build:
    
    name: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Build with dotnet
      run: dotnet build src --configuration Release
      
  publish_prereleases:
  
    name: Publish prerelease nuget packages on master
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
    - name: Build with dotnet and create prerelease nupkg
      run: dotnet build src --configuration PreRelease --version-suffix prerelease-$(date +%Y%m%d%H%M%S)
      shell: bash
    - name: Publish nuget
      run: |
           sed -i -e 's/TOKEN/${{ secrets.GITHUB_TOKEN }}/g' ./.build/nuget.config
           cp ./.build/nuget.config ./nuget.config
           for f in ./src/Agents.Net/bin/PreRelease/*.nupkg
           do
             dotnet nuget push "$f" -s "github" --no-symbols --skip-duplicate
           done
      shell: bash
      
  publish:
    name: build, pack & publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: publish on version change
        id: publish_nuget
        uses: rohith/publish-nuget@v2
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: src/Agents.Net/Agents.Net.csproj
          
          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: Agents.Net
          
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          VERSION_FILE_PATH: src/Agents.Net/NugetVersion.xml

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: <Version>(.*)<\/Version>
          
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          # VERSION_STATIC: 1.0.0

          # Flag to toggle git tagging, enabled by default
          TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NugetAPIKey}}

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          INCLUDE_SYMBOLS: true
